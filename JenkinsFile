buildPipelineView('BuildPipeline') {
    filterBuildQueue()
    filterExecutors()
    title('Project A CI Pipeline')
    displayedBuilds(5)
    selectedJob('t61')
    alwaysAllowManualTrigger(false)
    showPipelineParameters()
    refreshFrequency(60)
}



job("t61"){
 	 scm{
		github('sachiniraveni/task6','master')
  	}
  	triggers{
		scm('* * * * *')
  	}
	steps{
		shell('sudo cp -rvf *   /gitcode/')
	}
  	steps {
        	dockerBuildAndPublish {
            repositoryName('sachin13579/httpd')
            tag('new12')
            forceTag(false)
			forcePull(false)
           	createFingerprints(false)
           	skipDecorate()
        	}
    	}

}


job("t62"){
  	triggers{
		upstream("t61", 'SUCCESS')
 	}
  	steps{
    		shell('''if (sudo ls /gitcode/ | grep .html)
		then
		if sudo kubectl get myweb-deploy
		then
		sudo kubectl set image deploy php php=sachin13579/httpd:new12
		else
		sudo kubectl create -f /docker6/web-pvc.yml
        sudo kubectl create -f /docker6/web-dep.yml
		fi
		fi
		if sudo kubectl get service myweb-deploy
		then
		echo "already exits"
		else
		sudo kubectl create -f /docker6/web-service.yml
		fi''')
   	}
}


job("t63"){
  	triggers{
		upstream("t62",'SUCCESS')
 	}
	steps{
		shell('''status=$(curl -o /dev/null -s -w "%{http_code}" http://192.168.99.111:30036/index.html)
		if [[ $status == 200 ]]
		then
		exit 0
		else
		exit 1
		fi
		''')
	}
}
job("t64"){
  	triggers{
		upstream("t63",'FAILURE')
 	}
    	publishers {
        	mailer('iraveni182@gmail.com@gmail.com', true, true)
    	}
}
